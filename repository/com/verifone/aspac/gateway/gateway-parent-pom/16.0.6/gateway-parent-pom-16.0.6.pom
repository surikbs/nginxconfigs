<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.verifone.aspac.gateway</groupId>
	<artifactId>gateway-parent-pom</artifactId>
	<version>16.0.6</version>
	<name>AUNZ gateway parent pom</name>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>

		<slf4j.version>1.7.7</slf4j.version>
		<log4j.version>2.0.2</log4j.version>

		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<hamcrest.version>1.3</hamcrest.version>

		<maven.scm.plugin.version>1.9.2</maven.scm.plugin.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<maven.version.plugin.version>2.2</maven.version.plugin.version>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.source.plugin.version>2.3</maven.source.plugin.version>
		<maven.deploy.plugin.version>2.4</maven.deploy.plugin.version>
		<cobertura.maven.plugin.version>2.7</cobertura.maven.plugin.version>
		<maven.checkstyle.plugin.version>2.12.1</maven.checkstyle.plugin.version>
		<rpm.maven.plugin.version>2.1-alpha-4</rpm.maven.plugin.version>
		<properties.maven.plugin.version>1.0-alpha-2</properties.maven.plugin.version>
		<maven.jar.plugin.version>2.6</maven.jar.plugin.version>
		<maven.war.plugin.version>2.2</maven.war.plugin.version>
		<aspectj.maven.plugin.version>1.8</aspectj.maven.plugin.version>
		<maven.pmd.plugin.version>3.2</maven.pmd.plugin.version>
		<findbugs.maven.plugin.version>2.5.5</findbugs.maven.plugin.version>
	</properties>

	<scm>
		<connection>scm:git:ssh://dtvm/opt/gitrepos/gateway-aunz/pom</connection>
		<developerConnection>scm:git:ssh://dtvm/opt/gitrepos/gateway-aunz/pom</developerConnection>
		<url>scm:git:ssh://dtvm/opt/gitrepos/gateway-aunz/pom</url>
		<tag>16.0.6</tag>
	</scm>

	<distributionManagement>
		<repository>
			<id>VerifoneNexusRelease</id>
			<name>Verifone Nexus repository - releases</name>
			<url>http://dtvm:8081/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>VerifoneNexusSnapshots</id>
			<name>Verifone Nexus repository - snapshots</name>
			<url>http://dtvm:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<profiles>
		<!-- TODO start : This does not belong here. See if its actually used and 
			where it could go (eg settings.xml or create a top level parent pom) -->
		<profile>
			<id>default-profile</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<file>
					<exists>${java.home}/../lib/tools.jar</exists>
				</file>
			</activation>
			<properties>
				<toolsjar>${java.home}/../lib/tools.jar</toolsjar>
			</properties>
		</profile>
		<profile>
			<id>mac-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>${java.home}/../Classes/classes.jar</exists>
				</file>
			</activation>
			<properties>
				<toolsjar>${java.home}/../Classes/classes.jar</toolsjar>
			</properties>
		</profile>
		<!-- TODO end -->

		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
								<manifestEntries>
									<SCM-Revision>${buildNumber}</SCM-Revision>
								</manifestEntries>
							</archive>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<version>${maven.scm.plugin.version}</version>
						<configuration>
							<connectionType>developerConnection</connectionType>
							<tag>${project.version}</tag>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>create</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<shortRevisionLength>7</shortRevisionLength>
							<doCheck>false</doCheck>
							<doUpdate>false</doUpdate>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sonar</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>0.7.5.201505241946</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>agent-for-it</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<!-- Log4j2 dependencies contains slf support -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Binds Slf4j to log4j2 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- Log4j API and Core implementation required for binding -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- Binds legacy code that uses the Jakarta Commons loggings to use slf4j 
				instead -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- NOTE: jcl104-over-slf4j jcl104-over-slf4j is now deprecated and relocated 
				to jcl-over-slf4j. The following enforces the relocation. Above slf4j entries 
				make sure use slf4j libraries of the same version. Using different versions 
				caused java.lang.NoSuchMethodError. -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl104-over-slf4j</artifactId>
				<version>1.5.11</version>
			</dependency>

			<!-- Binds java logging to use slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>1.7.7</version>
			</dependency>

			<!-- test scope -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-integration</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.3</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration> <!-- source jars are now included in release RPMs -->
						<excludeResources>true</excludeResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.plugin.version}</version>
					<configuration>
						<tagNameFormat>@{project.version}</tagNameFormat>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>rpm-maven-plugin</artifactId>
					<version>${rpm.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>${aspectj.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven.version.plugin.version}</version>				
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura.maven.plugin.version}</version>
					<configuration>
						<formats>
							<format>xml</format>
							<format>html</format>
						</formats>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs.maven.plugin.version}</version>
					<configuration>
						<!-- Omit detectors that are wildly inefficent and take for ever to 
							run -->
						<omitVisitors>FindSqlInjection</omitVisitors>
						<!-- Enables analysis which takes more memory but finds more bugs. 
							If you run out of memory, changes the value of the effort element to 'low'. -->
						<effort>Default</effort>
						<!-- Reports all bugs (other values are medium and max) -->
						<threshold>Low</threshold>
						<!-- Produces XML report -->
						<xmlOutput>true</xmlOutput>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
					<configuration>
						<configLocation>point-checks.xml</configLocation>
						<excludes>**/test/*,**/legacy/**/*,**/*.properties,**/generated-sources/**/*</excludes>
						<includes>fi/point/**/*,**/com/point_fi/**/*.java</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven.pmd.plugin.version}</version>
					<configuration>
						<linkXRef>false</linkXRef>
						<sourceEncoding>UTF-8</sourceEncoding>
						<minimumTokens>30</minimumTokens>
						<targetJdk>${java.version}</targetJdk>
						<excludes>
							<exclude>**/legacy/**/*</exclude>
							<exclude>**/generated-sources/**/*</exclude>
							<exclude>**/*.properties</exclude>
							<exclude>**/test/*</exclude>
						</excludes>
					</configuration>
				</plugin>				
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<format>xml</format>
					<failOnViolation>false</failOnViolation>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
